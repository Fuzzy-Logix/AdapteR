% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FLStringFunctions.R
\name{levenshtein.distance}
\alias{levenshtein.distance}
\title{levenshtein.distance}
\usage{
levenshtein.distance(xsource, targets, caseFlag = 0, ...)
}
\arguments{
\item{xsource}{character or FLVector of characters}

\item{targets}{character or FLVector of characters}

\item{caseFLag}{logical or 0/1 indicating 
if comparision should be case sensitive}
}
\value{
FLVector if any \code{xsource} or \code{targets}
is R character of length 1. Otherwise returns a FLMatrix.
}
\description{
computes the levenshtein distance between strings.
}
\details{
The DB Lytix function called is FLLevenshteinDist.
This function computes the levenshtein distance between the 
first two char string arguments(the minimal number of insertions, deletions  
or replacements required to transform one string into the other).
}
\section{Constraints}{

row vectors are not supported currently.
Output is slightly different from vwr::levenshtein.distance.
Refer to \code{@return} section.
}
\examples{
widetable  <- FLTable("FL_DEMO", "iris", "rownames")
flv <- widetable[1:10,"Species"]
resultflvector <- levenshtein.distance("xyz",flv)
resultflmatrix <- levenshtein.distance(flv,flv,caseFLag=1)
resultflmatrix <- levenshtein.distance(flv,c("xyz","poli"),caseFLag=1)
}
\seealso{
\code{\link[vwr]{levenshtein.distance}} for R function reference
implementation.
}

