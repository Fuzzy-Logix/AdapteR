% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FLLinRegr.R
\name{step}
\alias{step}
\title{Choose a model.}
\usage{
step(object, scope, ...)
}
\arguments{
\item{object}{An object of class FLTable}

\item{scope}{A symbolic description of model to be fitted.
\code{scope} can be a list with upper and lower components
or a formula. For a widetable, upper and lower should be formulas
describing the range of models. If a formula is given instead of list
it will be treated as upper. For a deeptable, upper and lower should
be vectors with variable ids'.Provide empty list for deeptable if 
nothing is to be specified.}

\item{scale}{currently not used.}

\item{direction}{character.Must be one of backward,
Fbackward,UFbackward,forward.}

\item{trace}{if positive, information is printed out during the
running of the steps.}

\item{catToDummy}{Transform categorical variables to numerical values
either using dummy variables or by using Empirical
Logit. If the value is 1, transformation is done using
dummy variables, else if the value is 0,
transformation is done using Empirical Logit.}

\item{performNorm}{0/1 indicating whether to perform standardization of data.}

\item{performVarReduc}{0/1. If the value is 1,
the stored procedure eliminates variables based on standard deviation and
correlation.}

\item{makeDataSparse}{If 0,Retains zeroes and NULL values
from the input table. If 1, Removes zeroes and NULL. If 2,Removes zeroes 
but retains NULL values.}

\item{minStdDev}{Minimum acceptable standard deviation for
elimination of variables. Any variable that has a
standard deviation below this threshold is
eliminated. This parameter is only consequential if
the parameter PerformVarReduc = 1. Must be >0.}

\item{maxCorrel}{Maximum acceptable absolute correlation between
a pair of columns for eliminating variables. If the
absolute value of the correlation exceeds this
threshold, one of the columns is not transformed.
Again, this parameter is only consequential if the
parameter PerformVarReduc = 1. Must be >0 and <=1.}

\item{classSpec}{list describing the categorical dummy variables.}

\item{whereconditions}{takes the where_clause as a string.}

\item{highestpAllow1}{All the variables whose p-value exceed the value
specified by HighestpAllow1 are dropped in one go. 
Typical value for HighestProbAllow1 could be 0.50. Must be >0 and < 1.
Not applicable for forward.}

\item{highestpAllow2}{Only one variable is dropped at a time
till all the p-Values are below the HighestpAllow2.
Typical value could be 0.10. Must be >0 and < 1.
Not applicable for forward and backward.}

\item{stepWiseDecrease}{The StepwiseDecrease is used to
decrease the p-Value at each stage. In first step, 
all variables having pValue exceeding HighestpValue1 are
dropped. Then the HighestpValue1 is
reduced by StepwiseDecreasepValue
and the process is repeated until all
the variables have p-value less than HighestpValue2.
Must be >0 and <1. Used only for UFbackward.}
}
\value{
\code{step} performs linear regression and replicates equivalent R output.
}
\description{
\code{steps} performs linear regression on FLTable objects.
Choose a formula based model by p-values and R-Squared Values.
}
\section{Constraints}{

The anova method is not yet available for FLLinRegr.
}
\examples{
library(RODBC)
connection <- flConnect("Gandalf")
widetable  <- FLTable("FL_DEMO", "tblAbaloneWide", "ObsID")
s <- step(widetable,scope=list(lower=Rings~Height+Diameter),direction = "UFbackward")
plot(s)
s$coefficients
s <- step(widetable,
			scope=list(lower=Rings~Height+Diameter,
 					upper=Rings~Height+Diameter+Sex+Num_Length),
			direction = "UFbackward")
plot(s)
s$coefficients
s <- step(widetable,scope=list(lower=Rings~Num_Length),
			direction = "UFbackward",performNorm=1,performVarReduc=1,maxCorrel=0.6)
plot(s)
s$coefficients
s <- step(widetable,
			scope=list(upper=Rings~Height+Diameter+Sex+Num_Length+DummyCat),
 		direction = "Fbackward")
plot(s)
s$coefficients
s <- step(widetable,
			scope=Rings~Height+Diameter+Sex+Num_Length+DummyCat,
 		direction = "forward")
plot(s)
s$coefficients
s <- step(widetable,
			scope=Rings~Height+Diameter+Sex+Num_Length+DummyCat,
 		direction = "Fbackward")
plot(s)
s$coefficients
s <- step(widetable,
			scope=list(upper=Rings~Height+Diameter+Sex+Num_Length+DummyCat),
 		direction = "forward")
plot(s)
s$coefficients
deeptable <- FLTable("FL_DEMO","myLinRegrSmall","ObsID","VarID","Num_Val")
s <- step(deeptable,
			scope=list(upper=c("-1","0","1")),
 		direction = "backward")
s <- step(deeptable,
			scope=list(upper=c("1","2"),lower=c("1")),
 		direction = "Fbackward")
s <- step(deeptable,
			scope=list(lower=c("2")),
 		direction = "UFbackward")
s <- step(deeptable,
			scope=list(),
 		direction = "forward")
deeptable1 <- FLTable("FL_DEMO","tblLogRegr",
					"ObsID","VarID","Num_Val",whereconditions="ObsID < 7001")
s <- step(deeptable1,
			scope=list(upper=c("-1","0","1","2","3")),
 		direction = "backward",
			familytype="logistic")
s <- step(deeptable1,
			scope=list(upper=c("1","2","3"),lower=c("2")),
 		direction = "Fbackward",familytype="logistic")
deeptable1 <- FLTable("FL_DEMO","tblLogRegr",
					"ObsID","VarID","Num_Val",
                  whereconditions=c("ObsID < 7001","VarID<5"))
s <- step(deeptable1,
         scope=list(lower=c("2")),
         direction = "UFbackward",familytype = "logistic")
s <- step(deeptable1,
			scope=list(),
 		direction = "forward",familytype="logistic")
plot(s)
deeptable2 <- FLTable("FL_DEMO","tblLogRegrMN10000",
					"ObsID","VarID","Num_Val",whereconditions="ObsID < 7001")
s <- step(deeptable1,
			scope=list(upper=c("-1","0","1","2","3")),
 		direction = "backward",
			familytype="multinomial",pRefLevel=1)
s <- step(deeptable1,
			scope=list(upper=c("1","2","3"),lower=c("2")),
 		direction = "Fbackward",familytype="multinomial",pRefLevel=1)
deeptable2 <- FLTable("FL_DEMO","tblLogRegrMN10000",
					"ObsID","VarID","Num_Val",
                  whereconditions=c("ObsID < 7001","VarID<5"))
s <- step(deeptable2,
         scope=list(lower=c("2")),
         direction = "UFbackward",familytype = "multinomial",pRefLevel=1)
summary(s)
}

