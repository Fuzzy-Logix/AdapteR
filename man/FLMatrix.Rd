% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FLMatrix.R
\name{FLMatrix}
\alias{FLMatrix}
\title{Constructor function for FLMatrix.}
\usage{
FLMatrix(database = getOption("ResultDatabaseFL"), table_name,
  matrix_id_value = "", matrix_id_colname = "",
  row_id_colname = "rowIdColumn", col_id_colname = "colIdColumn",
  cell_val_colname = "valueColumn", dim = 0, dimnames = NULL,
  conditionDims = c(FALSE, FALSE), whereconditions = c(""),
  map_table = NULL, connection = getOption("connectionFL"))
}
\arguments{
\item{database}{name of the database}

\item{table_name}{name of the matrix table}

\item{matrix_id_value}{identifier for the input matrix}

\item{matrix_id_colname}{matrix id value in \code{table_name}}

\item{row_id_colname}{column name in \code{table_name} where row numbers are stored}

\item{col_id_colname}{column name in \code{table_name} where column numbers are stored}

\item{cell_val_colname}{column name in \code{table_name} where matrix elements are stored}

\item{dim}{vector representing the dimensions of the matrix}

\item{dimnames}{list of dimension names to assign to the matrix}

\item{conditionDims}{logical vector of length two representing if there are any conditions on dimensions}

\item{whereconditions}{where conditions if any to reference the in-database matrix}

\item{map_table}{in-database table name which stores the dimnames of the matrix. Not required if dimnames are already specified using \code{dimnames}}

\item{connection}{ODBC/JDBC connection handle to the database.}
}
\value{
\code{FLMatrix} returns an object of class FLMatrix mapped
to an in-database matrix.
}
\description{
\code{FLMatrix} constructs an object of class \code{FLMatrix}.
}
\details{
\code{FLMatrix} object is an in-database equivalent to matrix object.
This object is used as input for matrix operation functions.
}
\examples{
connection <- flConnect(odbcSource="Gandalf")
flmatrix <- FLMatrix("FL_DEMO", "tblMatrixMulti",
                     5, "Matrix_id","ROW_ID","COL_ID","CELL_VAL")
flmatrix
}

