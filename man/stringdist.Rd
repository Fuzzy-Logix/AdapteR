% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FLStringFunctions.R
\name{stringdist}
\alias{stringdist}
\title{stringdist}
\usage{
stringdist(a, b, method = c("lv", "dl", "hamming", "jaccard", "jw", "nmw"),
  weight = c(match = 1, mismatch = 1, gap = -1), caseFlag = 0, p = 0,
  vlength = 3, ...)
}
\arguments{
\item{a}{character or FLVector of characters}

\item{b}{character or FLVector of characters}

\item{method}{can be \code{c("lv","dl","hamming","jaccard","jw","nmw")}
where lv - Levenshtein, dl - Levenshtein-Damerau,
jw - Jaro-Winkler, nmw - NeedleManWunsch. Default is "lv"}

\item{weight}{for method=nmw, weights and penalties for match, mismatch and gaps,
integer weights for matching sequential, nonmatching non-sequential characters between the strings,
and integer penality for gaps (ideally negative).}

\item{p}{penality factor for jaro-winkler
if p==0 jaro distance is computed}

\item{vlength}{optional, length of strings to compare
used for hamming}

\item{...}{}

\item{caseFLag}{logical or 0/1 indicating
if comparision should be case sensitive}
}
\value{
FLVector if any \code{a} or \code{b}
is R character of length 1. Otherwise returns a FLMatrix.
}
\description{
compute distance metrics between strings.
}
\details{
This function computes pairwise string distances between elements of 
a and b, where the argument with less elements is recycled.

The following distance metrics are supported:
lv:  Levenshtein, calling FLLevenshteinDist;
dl: Levenshtein-Damerau, calling FLDLevenshteinDist;
hamming: Hamming, calling FLHammingDist;
jaccard: Jaccard, calling FLHammingDist;
j, p==0: Jaro, calling FLJaroDist; 
j, p>0: Jaro-Winkler, calling FLJaroWinklerDist;
nmw: Needleman-Wunsch, calling FLNeedleManWunschDist.
}
\section{Constraints}{

row vectors are not supported currently.
Output is slightly different from stringdist::stringdist.
Refer to \code{@return} section.
}
\examples{
widetable  <- FLTable("FL_DEMO", "iris", "rownames")
flv <- widetable[1:10,"Species"]
resultflvector <- stringdist("xyz",flv)
resultflvector <- stringdist("xyz",flv,method="lv",caseFLag=1)
resultflvector <- stringdist("xyz",flv,method="hamming",vlength=4)
resultflmatrix <- stringdist(flv,flv,method="jw",p=1)
resultflmatrix <- stringdist(c("xyz","poli"),flv,method="jw")
}
\seealso{
\code{\link[stringdist]{stringdist}} for R function reference
implementation.
}

