% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FLStringFunctions.R
\name{levenshtein.damerau.distance}
\alias{levenshtein.damerau.distance}
\title{levenshtein.damerau.distance}
\usage{
levenshtein.damerau.distance(xsource, targets, caseFlag = 0, ...)
}
\arguments{
\item{xsource}{character or FLVector of characters}

\item{targets}{character or FLVector of characters}

\item{caseFLag}{logical or 0/1 indicating 
if comparision should be case sensitive}
}
\value{
FLVector if any \code{xsource} or \code{targets}
is R character of length 1. Otherwise returns a FLMatrix.
}
\description{
computes the levenshtein-damerau distance between strings.
}
\details{
The DB Lytix function called is FLDLevenshteinDist.
This function computes the levenshtein-damerau distance between the 
two char string arguments (the minimal number of insertions, deletions 
replacements,or transpositions required to transform one string into the other).
}
\section{Constraints}{

row vectors are not supported currently.
Output is slightly different from vwr::levenshtein.damerau.distance.
Refer to \code{@return} section.
}
\examples{
widetable  <- FLTable("FL_DEMO", "iris", "rownames")
flv <- widetable[1:10,"Species"]
resultflvector <- levenshtein.damerau.distance("xyz",flv)
resultflmatrix <- levenshtein.damerau.distance(flv,flv,caseFLag=1)
resultflmatrix <- levenshtein.damerau.distance(flv,c("xyz","bghy"),caseFLag=1)
}
\seealso{
\code{\link[vwr]{levenshtein.damerau.distance}} for R function reference
implementation.
}

