# Created 2016-07-04 Mo 17:49
#+TITLE: AdapteR README
#+DATE: <2016-06-14 Di>
#+AUTHOR: Gregor Kappler
Fuzzy Logix's new R package AdapteR enables the R syntax to consume DB Lytix™ in-database analytics by generating SQL transparently, and replacing R matrix and data frame data structures with remote table objects.

* What is AdapteR?
With Fuzzy Logix' DB Lytix™, advanced analytics can realize dramatic improvements in performance by moving computation from client machines into data warehouses and clusters where big data lives. 
As important as performance and scalability is the way in which the end user interacts with the analytics, and the R language has become most pervasive in this area. R is remarkably expressive and flexible, allowing for fast
prototyping and evaluation, enabling agile analytics. 
Fuzzy Logix's new R package AdapteR enables the R syntax to consume DB Lytix™ in-database analytics by generating SQL transparently, and replacing R matrix and data frame data structures with remote table objects. AdapteR uses R's class system and method override to
seamlessly leverage in-database analytics, without requiring complicated R server installations or writing
custom SQL. 
AdapteR can be used to build interactive analytics at scale with just a few lines of R code!

You can download the full manual here: [[https://securisync.intermedia.net/web/s/LtQNzab68gL5jwSzQERIiV][AdapteR package manual]].
* Work environments & recommendations
Download R and R-Studio.
- For R:  https://cran.r-project.org/

  Install R. While Installing, check 32/64 bit according to system.
- For R-Studio: https://www.rstudio.com/products/rstudio/download/

  Install R Studio.
- Add R and Rcript executables to PATH variable.

* Requirements
AdapteR needs DB Lytix™ suite to be installed on your Teradata Appliance, so it can use its fast C++ implementation of analytical functions.
Find more information on [[http://www.fuzzylogix.com]].
** R
:PROPERTIES:
:ID:       DF5AB673-2890-4EAF-A9B3-A721F1609BF1
:END:
Installation of R on Windows:
1. Download and install R(>=3.2.0) from https://cran.r-project.org/bin/windows/base/ and R-Studio from  https://www.rstudio.com/products/rstudio/download2/.

Installation of R on Linux:
1. Install R using 

   Ubuntu:
   : apt-get install r-base
2. Download and Install R-Studio from https://www.rstudio.com/products/rstudio/download2/
3. Install OS packages required to build R packages

   Ubuntu:
   #+begin_src sh 
    apt-get -y build-dep libcurl4-gnutls-dev
    apt-get -y install libcurl4-gnutls-dev
    apt-get install libssl-dev
   #+end_src
* Connecting to the Data Warehouse
AdapteR does not depend on either JDBC or ODBC but uses either you provide at runtime.
You can either use ODBC or JDBC to connect to the warehouse
Setting up connection to Database:
1. load library RODBC/RJDBC package
2. Use =flConnect= to connect to a database. Help on this can be found using 
   #+begin_src R
   ?flConnect
   #+end_src

** ODBC
  #+BEGIN_SRC R :eval no
  install.packages("RODBC") ## Required for ODBC Connection.Need to setup odbc Source
  library(RODBC)
  #+END_SRC

** JDBC
In order to use jdbc with AdapteR, you need to install rJava
#+BEGIN_SRC R :eval no
install.packages("rJava") ## Required for RJDBC
install.packages("RJDBC") ## Required for JDBC connection
library(RJDBC)            ## check if RJDBC can be loaded

#+END_SRC
Also, you need to download and use the jdbc connector jar files either in the java load path or provide them when calling =flConnect=
the java development toolkit (jdbc).
- Windows: 
  1. (re-)install the jdk, and set the path variable in R
  : Sys.setenv(JAVA_HOME="yourPathTojdk")
  (https://docs.oracle.com/cd/E19182-01/820-7851/inst_cli_jdk_javahome_t/)
- Linux: 
  1. install jdk and sources
     Ubuntu:
     #+begin_src sh
     sudo apt install default-jdk
     #+end_src

  2. setup R for using your java installation
     #+begin_src sh
     sudo R CMD javareconf
     #+end_src

* Installation and Update instructions
:PROPERTIES:
:ID:       4AD7DBF5-9C7A-4C9C-A714-0735F860E7A4
:END:
Installation of AdapteR:
1. Open R-Studio or an R terminal
2. The recommended way to install (or update) the package is through github and the convenience function =install_github= function in the =devtools= package:
   1. Install devtools package using "install.packages("devtools")"
      #+BEGIN_SRC R :eval no
      install.packages("devtools") ## Required for install_github
      #+END_SRC
   2. Load devtools using
      #+BEGIN_SRC R :eval no
      require(devtools)
      #+END_SRC
   3. Install AdapteR from github
      #+BEGIN_SRC R :eval no
      install_github("Fuzzy-Logix/AdapteR")
      #+END_SRC
      This should automatically install dependencies. 
      On failure please install the 
5. Load AdapteR using
      #+BEGIN_SRC R :eval no
      library(AdapteR)
      #+END_SRC


Remove older Version, if you encounter any issues
#+begin_src R
remove.packages("AdapteR")
#+end_src




* AdapteR Demos and Training
The package includes some demos to get you started and to explain the most important concepts:
#+BEGIN_SRC R :session r_fl :results output :exports both
require(AdapteR)
demo(package="AdapteR")
## run a demo:
## demo("matrix.correlation",package="AdapteR")
#+END_SRC


#+RESULTS: 
#+BEGIN_EXAMPLE
Demos in package ‘AdapteR’:

connecting              
matrix.algebra          
matrix.correlation
#+END_EXAMPLE
** Optional packages
:PROPERTIES:
:ID:       A7CCAA11-1DCD-482D-8744-88631588B3AF
:CLOCK_LAST: [2016-08-18 Do 14:53]
:END:
:LOGBOOK:
CLOCK: [2016-08-18 Do 14:46]--[2016-08-18 Do 14:51] =>  0:05
:END:
The following suggested packages provide functions that are used if AdapteR functions are called on data.frame, matrix or vectors (not remote representations).
Functions in these packages provide the reference implementations for 
#+BEGIN_SRC R :eval no
  install.packages("psych")
  install.packages("SDMTools")
  install.packages("MASS")
  install.packages("psych")
  install.packages("cluster")
  install.packages("survival")
  install.packages("mgcv")
  install.packages("moments")
  install.packages("stringdist")
#+END_SRC

These packages are required to run the test suite:
#+BEGIN_SRC R :eval no
  install.packages("testthat")
  install.packages("optparse")
#+END_SRC
