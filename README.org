# Created 2016-07-04 Mo 17:49
#+TITLE: AdapteR README
#+DATE: <2016-06-14 Di>
#+AUTHOR: Gregor Kappler
Fuzzy Logix's new R package AdapteR enables the R syntax to consume DB Lytix™ in-database analytics by generating SQL transparently, and replacing R matrix and data frame data structures with remote table objects.

* What is AdapteR?
With Fuzzy Logix' DB Lytix™, advanced analytics can realize dramatic improvements in performance by moving computation from client machines into data warehouses and clusters where big data lives. 
As important as performance and scalability is the way in which the end user interacts with the analytics, and the R language has become most pervasive in this area. R is remarkably expressive and flexible, allowing for fast
prototyping and evaluation, enabling agile analytics. 
Fuzzy Logix's new R package AdapteR enables the R syntax to consume DB Lytix™ in-database analytics by generating SQL transparently, and replacing R matrix and data frame data structures with remote table objects. AdapteR uses R's class system and method override to
seamlessly leverage in-database analytics, without requiring complicated R server installations or writing
custom SQL. 
AdapteR can be used to build interactive analytics at scale with just a few lines of R code!

You can download the full manual here: [[https://securisync.intermedia.net/web/s/LtQNzab68gL5jwSzQERIiV][AdapteR package manual]].
* Work environments & recommendations
:PROPERTIES:
:ID:       28FFD833-3724-400D-8D66-C98275E16F2C
:CLOCK_LAST: [2016-08-12 Fr 01:30]
:END:
:LOGBOOK:
CLOCK: [2016-08-12 Fr 01:23]--[2016-08-12 Fr 01:28] =>  0:05
:END:
Download R and R-Studio.
- For R:  https://cran.r-project.org/

  Install R. While Installing, check 32/64 bit according to system.
- For R-Studio: https://www.rstudio.com/products/rstudio/download/

  Install R Studio.
- Add R and Rcript executables to PATH variable.

* Requirements
:PROPERTIES:
:ID:       B714F80B-0C7E-43A4-A496-456CDDF8F753
:CLOCK_LAST: [2016-08-12 Fr 01:32]
:END:
:LOGBOOK:
CLOCK: [2016-08-12 Fr 01:28]--[2016-08-12 Fr 01:30] =>  0:02
:END:
- AdapteR needs DB Lytix™ suite to be installed on your Teradata Appliance, so it can use its fast C++ implementation of analytical functions.

  Find more information on [[http://www.fuzzylogix.com]].

- Install prerequisites
  #+BEGIN_SRC R :eval no
  install.packages("roxygen2") ## Required for devtools
  install.packages("testthat") ## Required to run test suite
  #+END_SRC

You can either use ODBC or JDBC to connect to the warehouse
** ODBC  
  #+BEGIN_SRC R :eval no
  install.packages("RODBC") ## Required for ODBC Connection.Need to setup odbc Source
  library(RODBC)
  #+END_SRC

** JDBC
:PROPERTIES:
:ID:       B21CA873-0591-46AF-9191-3C0CEEE90D51
:END:
:LOGBOOK:
CLOCK: [2016-08-12 Fr 01:30]
:END:
  #+BEGIN_SRC R :eval no
  install.packages("rJava") ## Required for RJDBC
  install.packages("RJDBC") ## Required for JDBC connection
  library(RJDBC)
#+END_SRC
if this throws a JavaSetHome error (known issue in Windows),
try skipping this step and proceeding with [[id:22E14279-53E2-4737-A582-879158535A40][Installation instructions]] and check whether the demo scripts runs successfully.
else (re-)install the jdk, and set the path variable
: Sys.setenv(JAVA_HOME="yourPathTojdk")  
* Installation instructions
:PROPERTIES:
:ID:       22E14279-53E2-4737-A582-879158535A40
:END:
Install (or update) the package 
#+BEGIN_SRC R :eval no
## install.packages("devtools") ## Required for install_github
require(devtools)
install_github("Fuzzy-Logix/AdapteR")
#+END_SRC
(The package does not depend on either JDBC or ODBC but uses either you provide at runtime.  You savely can ignore warnings about xDBC.)

Remove older Version, if you encounter any issues
#+begin_src R
remove.packages("AdapteR")
#+end_src

  ## If installing from .tar.gz:
  # adptrdir <- "C:/Users/phani/Desktop/AdapteR_2.0.tar.gz" ##where the adapteR source file(tar.gz) is.
  # install.packages(adptrdir,repos = NULL,type = "source")

* AdapteR Demos and Training
The package includes some demos to get you started and to explain the most important concepts:
#+BEGIN_SRC R :session r_fl :results output :exports both
require(AdapteR)
demo(package="AdapteR")
## run a demo:
## demo("matrix.correlation",package="AdapteR")
#+END_SRC


#+RESULTS: 
#+BEGIN_EXAMPLE
Demos in package ‘AdapteR’:

connecting              
matrix.algebra          
matrix.correlation
#+END_EXAMPLE
